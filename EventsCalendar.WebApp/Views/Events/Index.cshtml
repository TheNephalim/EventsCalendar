@model List<DateTime>

@{
    // Layout Page
    if (ViewBag.UseLayout)
    {
        ViewBag.Title = "Responsive Events Calendar";
        Layout = "~/Views/Shared/_MainLayout.cshtml";
    }
    else
    {
        Layout = null;
    }

    // Page Variables
    string[] days = new string[7] { "SUN", "MON", "TUE", "WED", "THU", "FRI", "SAT" };
    string[] months = new string[12] { "JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC" };

    DateTime selectedDate = ViewBag.SelectedDate;
    DateTime firstOfMonth = new DateTime(selectedDate.Year, selectedDate.Month, 1);
    DateTime lastOfMonth = new DateTime(selectedDate.Year, selectedDate.Month, DateTime.DaysInMonth(selectedDate.Year, selectedDate.Month));
    DateTime activeDate, finishDate;

    if (firstOfMonth.DayOfWeek == DayOfWeek.Sunday)
    {
        activeDate = firstOfMonth;
    }
    else
    {
        activeDate = firstOfMonth.AddDays((Array.IndexOf(days, firstOfMonth.DayOfWeek.ToString().Substring(0, 3).ToUpper())) * -1);
    }
    
    if (lastOfMonth.DayOfWeek == DayOfWeek.Saturday)
    {
        finishDate = lastOfMonth;
    }
    else
    {
        finishDate = lastOfMonth.AddDays(7 - Array.IndexOf(days, lastOfMonth.DayOfWeek.ToString().Substring(0, 3).ToUpper()));
    }

}

<div class="calendar-header">
    <button class="arrow arrow-left" data-new-month="@firstOfMonth.AddDays(-1).ToShortDateString()">
        <span class="v-align"></span>
    </button>

    <div class="header">
        <span class="v-align">
            @months[selectedDate.Month - 1] @selectedDate.Year
        </span>
    </div>

    <button class="arrow arrow-right" data-new-month="@lastOfMonth.AddDays(1).ToShortDateString()">
        <span class="v-align">
        </span>
    </button>
</div>

<table class="calendar-days">
    <tr>
        <th>SUN</th>
        <th>MON</th>
        <th>TUE</th>
        <th>WED</th>
        <th>THU</th>
        <th>FRI</th>
        <th>SAT</th>
    </tr>

    @{
        string cssClass = "";
        short weekday, listPos = 0;
        while (activeDate < finishDate)
        {
            <tr>
                @{
                    weekday = 0;
                    while (weekday < 7)
                    {
                        cssClass = "";
                        if (Model != null && listPos < Model.Count() && activeDate == Model.ElementAt(listPos))
                        {
                            cssClass = "event-day";
                            listPos++;
                        }
                        <td class="@cssClass">@activeDate.Day</td>
                        weekday++;
                        activeDate = activeDate.AddDays(1);
                    }
                }
            </tr>
        }
    }
</table>
